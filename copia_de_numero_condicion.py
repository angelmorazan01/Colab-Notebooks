# -*- coding: utf-8 -*-
"""Copia de numero_condicion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lQp5d1vCU0OfJl3JM7-B2NnKvPt-nauf

### 1. Número de condición de una matriz

* En general un <b>*número de condición*</b> indica cuanto cambia la salida de una función al modificar los parámetros de entrada.

* Un problema numérico se considera <b>*bien comportado* o *estable*</b> cuando la función o matriz asociada tiene un número de condición pequeño.

* Un problema numérico se considera <b>*mal comportado* o *inestable*</b> cuando la función o matriz asociada tiene un número de condición grande.

### 2. El vector residual y el número de condición

* Considérese el sistema $A x = \bf{b}$.

* En general se obtiene una solución $\overline{\bf{x}}$ aproximada y $\bf{x}$ no se conoce con toda exactitud.

* Por consiguiente el error $\bf{e} = \overline{x} - x$</b> no se puede calcular directamente y es necesario introducir una manera de calcular la estimación del error.

* El <b>vector residual $r$</b> $= A\overline{x} - \bf{b}$ es una indicador alternativo para el error en el cálculo de un sistema de ecuaciones lineales.

* ¿Qué tan buen indicador del error es el vector residual?

* Justamente en este caso el número de condición indica que tan buen indicador es el vector residual.

### 3. Número de condición

* $\kappa (A) =\ \parallel A \parallel \parallel A^{-1} \parallel$

* Si $A$ es una matriz no-singular

* $1 = \parallel I \parallel = \parallel A A^{-1} \parallel\ \leq\ \parallel A \parallel \parallel A^{-1} \parallel = \kappa (A)$ 

* Si $\kappa (𝐴) \approx 1$ el vector residual ofrece una buena medida del error en la solución aproximada. En caso contrario, es un indicador pobre de la precisión de la solución aproximada.

### 4. Ejemplo

Calcular la solución de los sistemas

$4.1x + 2.8y = 4.1$

$9.7x + 6.6y = 9.7$

***

$4.1x + 2.8y = \bf{4.11}$

$9.7x + 6.6y = 9.7$
"""

import numpy as np
import scipy.linalg as sl
A = np.array([[4.1,2.8], [9.7,6.6]])
print(A)

print(np.linalg.cond(A))

import numpy as np
import scipy.linalg as sl
A = np.array([[1,2], [1.001,2]])
print(A)

print(np.linalg.cond(A))

import numpy as np
import scipy.linalg as sl
A = np.array([[2.01,1.99], [1.99,2.01]])
print(A)

print(np.linalg.cond(A))

"""### 5. Ejemplo

Calcular la solución de los sistemas

$3x + 2y = 5$

$-x + 8y = 3$

***

$3x + 2y = \bf{5.01}$

$-x + 8y = 3$
"""

import numpy as np
import scipy.linalg as sl
A = np.array([[3,2], [-1,8]])
print(A)
B = np.array([5,3])
print(B)
print(np.linalg.solve(A, B))

C = np.array([5.01,3])

print(np.linalg.solve(A, C))

print(np.linalg.cond(A))